name: Build and Deploy
run-name: ${{ github.actor }} is running "Build and Deploy" ðŸš€

on:
    push:
        branches:
            - main

env:
    GH_USERNAME: SPC_AutomaticDeploy
    GH_EMAIL: spc_automatic_deploy@github.com

jobs:
    version_check:
        name: Version Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Read version of yaml
              id: read-version
              uses: jbutcher5/read-yaml@1.6
              with:
                file: "pubspec.yaml"
                key-path: '["version"]'
            - name: Check tag
              env:
                VERSION: ${{ steps.read-version.outputs.data }}
              run: |-
                  # Check code tag format
                  [[  $VERSION =~ ^[0-9]+.[0-9]+.[0-9]+$ ]] || \
                    (echo $'regex \'^[0-9]+.[0-9]+.[0-9]+$\' was not respected'; exit 99)
        
                  # Check code tag uniqueness
                  git tag | grep "^$VERSION$" && echo "ERROR: TAG EXISTS WITHIN THE REPO!" && exit 99
                  
                  echo "Version $VERSION is valid!"
        outputs:
            tag_version: "v${{ steps.read-version.outputs.data }}"

    build_and_deploy:
        name: Build web and deploy
        runs-on: ubuntu-latest
        needs: version_check
        env:
            TAG_VERSION: ${{ needs.version_check.outputs.tag_version }}
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Set up flutter
              uses: subosito/flutter-action@v2
              with:
                flutter-version: '3.24.x'
                channel: 'stable'
            - name: Check flutter and install derry
              run: |-
                flutter --version
                dart pub global activate derry
            - name: Clean, get and build
              run: |-
                derry clean
                derry build
            - name: Set up Git
              run: |-
                git config --global user.name ${{ env.GH_USERNAME }}
                git config --global user.email ${{ env.GH_EMAIL }}
            - name: Deploy via Git
              run: |-
                cd build
                git clone https://${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}@github.com/spioc999/spioc999.github.io.git website-runnable-repo
                cd website-runnable-repo
                git checkout main
                cp -r -f ../web/* .
                git add --all
                git commit -m "${{ env.TAG_VERSION }} - SPC's portfolio automatic deploy"
                git push origin main

    tag_and_release:
        name: Create tag and release
        runs-on: ubuntu-latest
        needs: [version_check, build_and_deploy]
        env:
            TAG_VERSION: ${{ needs.version_check.outputs.tag_version }}
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Set up Git
              run: |-
                git config --global user.name ${{ env.GH_USERNAME }}
                git config --global user.email ${{ env.GH_EMAIL }}
            - name: Create and push tag
              run: |-
                git tag ${{ env.TAG_VERSION }}
                git push origin ${{ env.TAG_VERSION }}
            - name: Create release
              uses: actions/create-release@v1
              with:
                tag_name: ${{ env.TAG_VERSION }}
                release_name: Release ${{ env.TAG_VERSION }}
                draft: false
                prerelease: false
              

